{{ $ = sdict }}
{{ $.Set "User" (or (userArg (toInt (reFind `\d{17,}` .Message.Content))) .User)}}
{{ $.Set "Member" (getMember $.User.ID)}}

{{ $fireLevel := or (dbGet $.User.ID "fireLevel").Value (sdict "Level" 0 "TrackedXP" 0) }}
{{ $fireLevel.Set "XP" (dbGet $.User.ID "xp").Value }}
{{ $fireLevel.Set "NeededXP" (add 100 (mult 50 $fireLevel.Level) (mult 5 (pow $fireLevel.Level 2))) }}
{{ $fireLevel.Set "NewXP" (sub $fireLevel.XP $fireLevel.TrackedXP) }}
{{ $fireLevel.Set "NewLevel" false}}
{{ $fireLevel.Set "Rank" (dbRank (sdict "pattern" "xp") $.User.ID "xp")}}

{{ range (seq 0 1000) }}
{{ if ge $fireLevel.NewXP $fireLevel.NeededXP }}
    {{ $fireLevel.Set "TrackedXP" (add $fireLevel.TrackedXP $fireLevel.NeededXP) }}
    {{ $fireLevel.Set "NewXP" (sub $fireLevel.NewXP $fireLevel.NeededXP) }}
    {{ $fireLevel.Set "NewLevel" (add (or $fireLevel.NewLevel $fireLevel.Level) 1) }}
    {{ $fireLevel.Set "NeededXP" (add 100 (mult 50 $fireLevel.NewLevel) (mult 5 (pow $fireLevel.NewLevel 2))) }}
{{ else }}
    {{ break }}
{{ end }}
{{ end }}

{{ if $fireLevel.NewLevel }}
    {{ dbSet $.User.ID "fireLevel" (sdict "Level" $fireLevel.NewLevel "TrackedXP" $fireLevel.TrackedXP) }}
    {{ sendMessage nil (printf "**%s** just reached level %d!" (or $.Member.Nick $.User.Username) $fireLevel.NewLevel) }}
{{ end }}

{{ $fireLevel.Set "Progress" (round (mult (fdiv $fireLevel.NewXP $fireLevel.NeededXP) 100)) }}
{{ range (seq 0 (add 1 (div (toInt $fireLevel.Progress) 10))) }}
    {{ $fireLevel.Set "ProgressBar" (print (or $fireLevel.ProgressBar "") "ðŸŸ©") }}
{{ end }}
{{ range (seq (div $fireLevel.Progress 10) 11) }}
    {{ $fireLevel.Set "ProgressBar" (print (or $fireLevel.ProgressBar "") "â¬œ") }}
{{ end }}

{{ $embed := cembed
    "title" (printf "%s is ranked #%d on AffiliFire!" (or $.Member.Nick $.User.Username) $fireLevel.Rank)
    "fields" (cslice
    (sdict "name" (or $fireLevel.NewLevel $fireLevel.Level) "value" "Current Level" "inline" true)
    (sdict "name" (add 1 (or $fireLevel.NewLevel $fireLevel.Level)) "value" "Next Level" "inline" true)
    (sdict "name" $fireLevel.XP "value" "Current XP" "inline" true)
    (sdict "name" (add $fireLevel.TrackedXP $fireLevel.NeededXP) "value" "XP Needed" "inline" true)
    (sdict "name" (printf "%d%% of the way to level %d!" $fireLevel.Progress (add 1 (or $fireLevel.NewLevel $fireLevel.Level))) "value" $fireLevel.ProgressBar)
    )
    "color" (randInt 10000000 15000000)
    "footer" (sdict "text" "-rank")
    "thumbnail" (sdict "url" ($.User.AvatarURL "1024"))
}}